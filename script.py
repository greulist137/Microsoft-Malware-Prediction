#Import Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
import torch
from torchvision import datasets, transforms, models
import torch.nn as nn
import torchvision.datasets as dsets
import torchvision.transforms as transforms
from torch.autograd import Variable
from sklearn.decomposition import PCA
from dummyPy import OneHotEncoder

#data = pd.read_csv("train.csv", chunksize=10)



sample_data = pd.read_csv("train.csv", nrows=100)

encoder = OneHotEncoder(['ProductName', 'Platform', 'Processor', 'OsPlatformSubRelease',
       'OsBuildLab', 'SkuEdition', 'PuaMode', 'SmartScreen',
       'Census_MDC2FormFactor', 'Census_DeviceFamily', 'Census_ProcessorClass',
       'Census_PrimaryDiskTypeName', 'Census_ChassisTypeName',
       'Census_PowerPlatformRoleName', 'Census_InternalBatteryType',
       'Census_OSArchitecture', 'Census_OSBranch', 'Census_OSEdition',
       'Census_OSSkuName', 'Census_OSInstallTypeName',
       'Census_OSWUAutoUpdateOptionsName', 'Census_GenuineStateName',
       'Census_ActivationChannel', 'Census_FlightRing'])
encoder.fit(sample_data)

#encoder.transform(sample_data).shape

